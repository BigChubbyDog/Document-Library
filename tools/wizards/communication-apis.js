#!/usr/bin/env node

/**
 * Communication APIs Setup Helper
 * Guide for setting up Twilio and SendGrid for automated communication
 */

const { execSync } = require('child_process');

class CommunicationAPIsSetup {
    constructor() {
        this.keyVaultName = 'mortgage-campaign-kv';
    }

    async setupCommunicationAPIs() {
        console.log('üì± COMMUNICATION APIS SETUP HELPER');
        console.log('='.repeat(40));
        console.log('Setting up SMS and Email automation for mortgage leads...\n');
        
        try {
            this.showCommunicationOverview();
            await this.setupSendGrid();
            await this.setupTwilio();
            await this.showIntegrationBenefits();
            await this.testCommunicationSetup();
            
        } catch (error) {
            console.error('‚ùå Communication setup failed:', error.message);
        }
    }

    showCommunicationOverview() {
        console.log('üìß COMMUNICATION AUTOMATION OVERVIEW:');
        console.log('='.repeat(40));
        console.log('Communication automation transforms your mortgage lead process:\n');
        
        console.log('‚úÖ AUTOMATED EMAIL WORKFLOWS:');
        console.log('   ‚Ä¢ Welcome emails for new leads');
        console.log('   ‚Ä¢ Mortgage rate updates and alerts');
        console.log('   ‚Ä¢ Application status notifications');
        console.log('   ‚Ä¢ Personalized follow-up sequences');
        console.log('   ‚Ä¢ Document request reminders\n');
        
        console.log('‚úÖ SMS AUTOMATION FEATURES:');
        console.log('   ‚Ä¢ Instant lead notification alerts');
        console.log('   ‚Ä¢ Appointment reminders');
        console.log('   ‚Ä¢ Quick rate quotes via text');
        console.log('   ‚Ä¢ Application status updates');
        console.log('   ‚Ä¢ Time-sensitive communications\n');
        
        console.log('üìä BUSINESS IMPACT:');
        console.log('   ‚Ä¢ 40-60% faster lead response times');
        console.log('   ‚Ä¢ 25-35% higher conversion rates');
        console.log('   ‚Ä¢ 80% reduction in manual follow-up');
        console.log('   ‚Ä¢ 24/7 automated lead nurturing\n');
    }

    async setupSendGrid() {
        console.log('üìß SENDGRID EMAIL AUTOMATION SETUP:');
        console.log('='.repeat(40));
        
        console.log('üìã SENDGRID SETUP STEPS:');
        console.log('1. üåê Go to: https://sendgrid.com');
        console.log('2. üìù Create account (free tier available)');
        console.log('3. ‚úÖ Verify your email address');
        console.log('4. üè¢ Complete sender verification');
        console.log('5. ‚öôÔ∏è  Go to Settings ‚Üí API Keys');
        console.log('6. üîê Create API Key:');
        console.log('   ‚Ä¢ Name: "Mortgage Campaign Automation"');
        console.log('   ‚Ä¢ Permissions: "Full Access"');
        console.log('7. üìã Copy the API key (starts with "SG.")');
        console.log('8. üîí Store securely in Key Vault\n');
        
        console.log('üíæ STORAGE COMMAND:');
        console.log(`az keyvault secret set --vault-name ${this.keyVaultName} --name "sendgrid-api-key" --value "YOUR_SENDGRID_API_KEY"`);
        console.log('');
        
        console.log('üìß EMAIL AUTOMATION FEATURES ENABLED:');
        console.log('   ‚úÖ Lead welcome email sequences');
        console.log('   ‚úÖ Mortgage rate alert campaigns'); 
        console.log('   ‚úÖ Application status notifications');
        console.log('   ‚úÖ Document request automation');
        console.log('   ‚úÖ Drip campaign workflows');
        console.log('   ‚úÖ A/B testing capabilities\n');
    }

    async setupTwilio() {
        console.log('üì± TWILIO SMS AUTOMATION SETUP:');
        console.log('='.repeat(35));
        
        console.log('üìã TWILIO SETUP STEPS:');
        console.log('1. üåê Go to: https://www.twilio.com');
        console.log('2. üìù Create account (free trial available)');
        console.log('3. ‚úÖ Verify your phone number');
        console.log('4. üìä Go to Console Dashboard');
        console.log('5. üÜî Copy your Account SID');
        console.log('6. üîê Copy your Auth Token');
        console.log('7. üìû Purchase a phone number:');
        console.log('   ‚Ä¢ Go to Phone Numbers ‚Üí Manage ‚Üí Buy a number');
        console.log('   ‚Ä¢ Choose local or toll-free');
        console.log('   ‚Ä¢ Enable SMS capabilities');
        console.log('8. üîí Store credentials in Key Vault\n');
        
        console.log('üíæ STORAGE COMMANDS:');
        console.log(`az keyvault secret set --vault-name ${this.keyVaultName} --name "twilio-account-sid" --value "YOUR_ACCOUNT_SID"`);
        console.log(`az keyvault secret set --vault-name ${this.keyVaultName} --name "twilio-auth-token" --value "YOUR_AUTH_TOKEN"`);
        console.log('');
        
        console.log('üì± SMS AUTOMATION FEATURES ENABLED:');
        console.log('   ‚úÖ Instant lead notification alerts');
        console.log('   ‚úÖ Appointment confirmation/reminders');
        console.log('   ‚úÖ Rate quote delivery via SMS');
        console.log('   ‚úÖ Application milestone updates');
        console.log('   ‚úÖ Document submission reminders');
        console.log('   ‚úÖ Two-way SMS conversations\n');
    }

    async showIntegrationBenefits() {
        console.log('üîó INTEGRATION WITH D365 CRM:');
        console.log('='.repeat(35));
        
        console.log('üéØ AUTOMATED WORKFLOWS:');
        console.log('   ‚Ä¢ New lead ‚Üí Instant welcome email + SMS alert');
        console.log('   ‚Ä¢ Lead scoring ‚Üí Personalized follow-up sequence');
        console.log('   ‚Ä¢ Application started ‚Üí Progress tracking emails');
        console.log('   ‚Ä¢ High-value lead ‚Üí Immediate SMS to loan officer');
        console.log('   ‚Ä¢ Document needed ‚Üí Automated request + reminder');
        console.log('   ‚Ä¢ Rate change ‚Üí Bulk SMS/email to qualified leads\n');
        
        console.log('üìä PERFORMANCE TRACKING:');
        console.log('   ‚Ä¢ Email open/click rates by lead source');
        console.log('   ‚Ä¢ SMS response rates and conversion tracking');
        console.log('   ‚Ä¢ Communication timing optimization');
        console.log('   ‚Ä¢ A/B testing for message effectiveness');
        console.log('   ‚Ä¢ ROI analysis for communication campaigns\n');
        
        console.log('ü§ñ AI-POWERED OPTIMIZATION:');
        console.log('   ‚Ä¢ Send time optimization');
        console.log('   ‚Ä¢ Content personalization');
        console.log('   ‚Ä¢ Response sentiment analysis');
        console.log('   ‚Ä¢ Automated follow-up scheduling');
        console.log('   ‚Ä¢ Lead scoring based on engagement\n');
    }

    async testCommunicationSetup() {
        console.log('üß™ TESTING COMMUNICATION SETUP:');
        console.log('='.repeat(35));
        
        console.log('üìù VALIDATION CHECKLIST:');
        console.log('   ‚ñ° SendGrid API key stored in Key Vault');
        console.log('   ‚ñ° Twilio Account SID stored in Key Vault');
        console.log('   ‚ñ° Twilio Auth Token stored in Key Vault');
        console.log('   ‚ñ° Phone number purchased and configured');
        console.log('   ‚ñ° Sender verification completed');
        console.log('');
        
        console.log('üß™ TEST COMMANDS:');
        console.log('# Check credential storage');
        console.log('node setup/credential-status.js');
        console.log('');
        console.log('# Validate all credentials');
        console.log('node tests/credential-validator.js');
        console.log('');
        console.log('# Test communication integration');
        console.log('node tests/communication-test.js # (will be created)');
        console.log('');
        
        console.log('üìß SAMPLE EMAIL TEST:');
        console.log('Once configured, you can send test emails to verify setup:');
        console.log('   ‚Ä¢ Welcome email template');
        console.log('   ‚Ä¢ Rate alert notification');
        console.log('   ‚Ä¢ Application status update');
        console.log('');
        
        console.log('üì± SAMPLE SMS TEST:');
        console.log('Once configured, you can send test SMS to verify setup:');
        console.log('   ‚Ä¢ Lead notification alert');
        console.log('   ‚Ä¢ Appointment reminder');
        console.log('   ‚Ä¢ Quick rate quote delivery');
        console.log('');
    }

    async createCommunicationTestScript() {
        console.log('üõ†Ô∏è  Creating communication test script...\n');
        
        const testScript = `#!/usr/bin/env node

/**
 * Communication APIs Test Script
 * Tests SendGrid and Twilio integration
 */

const { execSync } = require('child_process');

class CommunicationTester {
    constructor() {
        this.keyVaultName = 'mortgage-campaign-kv';
    }
    
    async testCommunicationAPIs() {
        console.log('üß™ TESTING COMMUNICATION APIS');
        console.log('='.repeat(35));
        
        try {
            await this.testSendGridCredentials();
            await this.testTwilioCredentials();
            this.showTestResults();
            
        } catch (error) {
            console.error('‚ùå Communication test failed:', error.message);
        }
    }
    
    async testSendGridCredentials() {
        console.log('üìß Testing SendGrid credentials...');
        
        try {
            const apiKey = this.getSecret('sendgrid-api-key');
            if (apiKey) {
                console.log('   ‚úÖ SendGrid API key found');
                console.log('   üìè Key length:', apiKey.length);
                console.log('   üîë Key prefix:', apiKey.substring(0, 3));
            } else {
                console.log('   ‚ùå SendGrid API key not found');
            }
        } catch (error) {
            console.log('   ‚ùå SendGrid test failed:', error.message);
        }
    }
    
    async testTwilioCredentials() {
        console.log('\\nüì± Testing Twilio credentials...');
        
        try {
            const accountSid = this.getSecret('twilio-account-sid');
            const authToken = this.getSecret('twilio-auth-token');
            
            if (accountSid && authToken) {
                console.log('   ‚úÖ Twilio Account SID found');
                console.log('   ‚úÖ Twilio Auth Token found');
                console.log('   üìè SID length:', accountSid.length);
                console.log('   üîë SID prefix:', accountSid.substring(0, 4));
            } else {
                console.log('   ‚ùå Twilio credentials incomplete');
            }
        } catch (error) {
            console.log('   ‚ùå Twilio test failed:', error.message);
        }
    }
    
    getSecret(secretName) {
        try {
            return execSync(
                \`az keyvault secret show --vault-name \${this.keyVaultName} --name "\${secretName}" --query "value" -o tsv 2>/dev/null\`,
                { encoding: 'utf8' }
            ).trim();
        } catch (error) {
            return null;
        }
    }
    
    showTestResults() {
        console.log('\\nüìä COMMUNICATION TEST RESULTS:');
        console.log('='.repeat(35));
        
        const sendgridReady = !!this.getSecret('sendgrid-api-key');
        const twilioReady = !!this.getSecret('twilio-account-sid') && !!this.getSecret('twilio-auth-token');
        
        console.log(\`üìß SendGrid Email: \${sendgridReady ? '‚úÖ Ready' : '‚ùå Not configured'}\`);
        console.log(\`üì± Twilio SMS: \${twilioReady ? '‚úÖ Ready' : '‚ùå Not configured'}\`);
        
        if (sendgridReady && twilioReady) {
            console.log('\\nüöÄ Communication automation fully configured!');
            console.log('   Ready for automated email and SMS workflows');
        } else if (sendgridReady || twilioReady) {
            console.log('\\n‚ö° Partial communication setup complete');
            console.log('   Some automation features available');
        } else {
            console.log('\\nüîß Communication setup needed');
            console.log('   Run: node setup/communication-apis.js');
        }
    }
}

// Execute if run directly
if (require.main === module) {
    const tester = new CommunicationTester();
    tester.testCommunicationAPIs()
        .then(() => {
            console.log('\\n‚úÖ Communication test complete!');
        })
        .catch(error => {
            console.error('‚ùå Test failed:', error.message);
            process.exit(1);
        });
}

module.exports = { CommunicationTester };`;
        
        const fs = require('fs');
        fs.writeFileSync(
            '/Users/logan/Mortgage-Campaign-Intelligence/tests/communication-test.js',
            testScript
        );
        
        console.log('‚úÖ Communication test script created: tests/communication-test.js');
    }
}

// Execute if run directly  
if (require.main === module) {
    const setup = new CommunicationAPIsSetup();
    setup.setupCommunicationAPIs()
        .then(() => {
            return setup.createCommunicationTestScript();
        })
        .then(() => {
            console.log('\\nüéâ Communication APIs setup guide complete!');
            console.log('\\nüéØ NEXT STEPS:');
            console.log('1. Set up SendGrid account and get API key');
            console.log('2. Set up Twilio account and get credentials');
            console.log('3. Store credentials using the az keyvault commands');
            console.log('4. Test: node tests/communication-test.js');
        })
        .catch(error => {
            console.error('‚ùå Setup failed:', error.message);
            process.exit(1);
        });
}

module.exports = { CommunicationAPIsSetup };
